#if ($isInServletMode)## Visible only in a page
#if($displayMainMenu)
<div id="menuview">
<div id="mainmenu" class="navbar navbar-inverse navbar-static-top">
  <div class="navbar-inner">
    <div class="container">
      <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </a>

      <a class="brand" href="$!xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI')))" title="Home" rel="home">
#if("$!{themeDocFullName}" == '')
  #set($themeDocFullName = "$!xwiki.getUserPreference('colorTheme')")
#end
#if($themeDocFullName != '' && $themeDocFullName!='ColorThemes.DefaultColorTheme')
  #set($themeDoc = $xwiki.getDocument($themeDocFullName))
  #set($themeObj = $themeDoc.getObject('ColorThemes.ColorThemeClass'))
  #set($logoname = $themeObj.getProperty('logoImage').value)
#end
#if("$!{logoname}" != '')
  #set($logourl = $themeDoc.getAttachmentURL($logoname))
#else
  #set($logoname = $xwiki.getSkinPreference('logo', 'logo.png'))
  #set($logo = $!prefdoc.getAttachment($logoname))
  #if(!$logo)
    #set($logourl = $xwiki.getSkinFile($logoname))
  #else
    #set($logourl = $prefdoc.getAttachmentURL($logo.filename))
  #end
#end
        <img src="$!logourl" alt="Logo"/>
      </a>

      <div class="nav-collapse collapse">
        <strong id="xwikimenutitle" class="hidden">$msg.get('core.menu.main.title')</strong>
        <ul class="nav">
#xwikitopmenuseparator()
#set ($workspaceManagerMainDocumentReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'WorkspaceManager', 'WebHome'))
#set ($isWorkspaceManagerAppInstalled = $xwiki.exists($workspaceManagerMainDocumentReference))
#set ($isWorkspace = $services.workspace.isWorkspace($xcontext.database))
#set ($isMainWikiUser = ($xcontext.mainWikiName == "$!{xcontext.userReference.wikiReference.name}"))
##
## Main Wiki
##
#set ($hasMainWikiAdmin = $xwiki.hasAccessLevel('admin', $xcontext.user, "${xcontext.mainWikiName}:XWiki.XWikiPreferences"))
#set ($mainWikiAllDocsDocumentReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'Main', 'AllDocs'))
#set ($displayMainWikiSubmenu = $hasWatch || $hasMainWikiAdmin || $xwiki.exists($mainWikiAllDocsDocumentReference))
#if ($isWorkspaceManagerAppInstalled && !$xcontext.isMainWiki() && ($isMainWikiUser || ($isGuest && $isWorkspace)))
  #set ($mainWikiHomeDocumentReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'Main', 'WebHome'))
  #if (!$displayMainWikiSubmenu)
    #xwikitopmenuentry($xwiki.getURL($mainWikiHomeDocumentReference) 'Main' 'tmMainWiki' 'book')
  #else
    #xwikitopmenuentrystart('Main' 'tmMainWiki' 'book')
      #set ($hasPreviousMenuSection = false)
      #set ($hasCreateWorkspace = $isWorkspaceManagerAppInstalled && $isMainWikiUser &&
  $services.workspace.canCreateWorkspace($xcontext.user, "workspace0reserved0for0internal0xwiki0usage${mathtool.random(0, 999)}"))
      #if ($hasCreateWorkspace)
        #set ($createWorkspaceDocumentReference = $services.model.createDocumentReference('xwiki', 'WorkspaceManager', 'CreateNewWorkspace'))
        #submenuitem("$xwiki.getURL($createWorkspaceDocumentReference)" $msg.get('workspacemanager.menu.create') 'tmCreateWorkspace', '')
        #set ($hasPreviousMenuSection = true)
      #end
      #if ($hasMainWikiAdmin)
        #set ($mainWikiAdministrationDocumentReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'XWiki', 'XWikiPreferences'))
        #submenuitem("$xwiki.getURL($mainWikiAdministrationDocumentReference, 'admin', '')" $msg.get('workspacemanager.menu.mainwiki.admin') 'tmAdminMainWiki' 'wrench')
        #set ($hasPreviousMenuSection = true)
      #end
      #if($hasPreviousMenuSection)
        #submenuseparator()
      #end
      #submenuitem("$xwiki.getURL($workspaceManagerMainDocumentReference)" $msg.get('workspacemanager.menu.workspace.index') 'tmWorkspaceIndex' 'home')
      #if ($xwiki.exists($mainWikiAllDocsDocumentReference))
        #submenuitem("$xwiki.getURL($mainWikiAllDocsDocumentReference)" $msg.get('core.menu.wiki.documentindex') 'tmMainWikiDocumentIndex' 'book')
        #set ($hasPreviousMenuSection = true)
      #end
    #xwikitopmenuentryend()
  #end
#end
##
## Wiki
##
#set ($isAdminAppInstalled = $xwiki.exists('XWiki.AdminSheet'))
#set ($canDeleteWorkspace = $isWorkspaceManagerAppInstalled && $services.workspace.canDeleteWorkspace($xcontext.user, $xcontext.database))
#set ($displayWorkspaceDirectoryMenuEntry = $isWorkspaceManagerAppInstalled && $isMainWikiUser && $xcontext.isMainWiki())
#set ($displayWikiSubmenu = $hasWatch || $hasGlobalAdmin || $xwiki.exists('Main.AllDocs') || $displayWorkspaceDirectoryMenuEntry || $canDeleteWorkspace)
#set ($wikiEntryText = $msg.get('core.menu.type.wiki'))
#set ($wikiEntryId = 'tmWiki')
#if ($isWorkspaceManagerAppInstalled)
  #if ($xcontext.isMainWiki() && $xwiki.isVirtualMode())
    #set ($wikiEntryId = 'tmMainWiki')
  #elseif ($isWorkspace)
    #set ($wikiEntryId = 'tmWorkspace')
  #end
#end
#if ($xwiki.isVirtualMode() && $services.wikimanager)
  #set ($wikiName = $services.wikimanager.getWikiDocument($xcontext.getDatabase()).getWikiPrettyName())
  #if ("$!wikiName.trim()" == '')
    #set ($wikiName = $xcontext.getDatabase())
  #end
  #set ($wikiEntryText = "${wikiName}")
#end
#if (!$displayWikiSubmenu)
  #xwikitopmenuentry($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('WIKI'))) $wikiEntryText $wikiEntryId 'globe')
#else
  #xwikitopmenuentrystart($wikiEntryText $wikiEntryId 'globe')
  #set ($hasPreviousMenuSection = false)
  #if ($hasWatch)
    #set ($watchClasses = '')
    #set ($unwatchClasses = 'hidden')
    #if ($xwiki.watchlist.isWikiWatched())
      #set ($watchClasses = 'hidden')
      #set ($unwatchClasses = '')
    #end
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=addwiki')&amp;xredirect=$escapetool.url($doc.getURL())" $msg.get('core.menu.watchlist.add.wiki') 'tmWatchWiki' 'eye-open' $watchClasses)
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=removewiki')&amp;xredirect=$escapetool.url($doc.getURL())" $msg.get('core.menu.watchlist.remove.wiki') 'tmUnwatchWiki' 'eye-close' $unwatchClasses)
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasGlobalAdmin)
    #set ($adminwikiaction = $!xwiki.getURL('XWiki.XWikiPreferences', 'admin'))
    #set ($importaction = $!xwiki.getURL('XWiki.XWikiPreferences', 'import'))
    #if ($isAdminAppInstalled)
      #submenuitem($adminwikiaction $msg.get('core.menu.admin.wiki') 'tmAdminWiki', 'wrench')
    #else
      #submenuitem($importaction $msg.get('core.menu.admin') 'tmAdminWiki' 'wrench')
    #end
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasPreviousMenuSection && ($displayWorkspaceDirectoryMenuEntry || $xwiki.exists('Main.AllDocs')))
    #submenuseparator()
  #end
  #if ($displayWorkspaceDirectoryMenuEntry)
    #submenuitem("$xwiki.getURL($workspaceManagerMainDocumentReference)" $msg.get('workspacemanager.menu.workspace.index') 'tmWorkspaceIndex' 'book')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($xwiki.exists('Main.AllDocs'))
    #submenuitem("$xwiki.getURL('Main.AllDocs')" $msg.get('core.menu.wiki.documentindex') 'tmWikiDocumentIndex' 'book')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($canDeleteWorkspace)
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #set ($deleteWorkspacePageReference = $services.model.createDocumentReference($xcontext.mainWikiName, 'WorkspaceManager', 'DeleteWorkspaceCode'))
    #set ($deleteUrl = $xwiki.getURL($deleteWorkspacePageReference, 'view', "workspaceId=${xcontext.database}&workspaceName=$wikiName"))
    #submenuitem($deleteUrl $msg.get('workspacemanager.menu.workspace.delete') 'tmDeleteWorkspace' 'remove')
    #set ($hasPreviousMenuSection = true)
  #end
  #xwikitopmenuentryend()
#end
##
## Space
##
#set ($displaySpaceSubmenu = $hasWatch || $hasSpaceAdmin || $xwiki.exists('Main.SpaceIndex'))
#if (!$displaySpaceSubmenu)
  #xwikitopmenuentry($xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('SPACE'))) "$!{escapetool.xml($doc.space)}" 'tmSpace' 'folder-open')
#else
  #xwikitopmenuentrystart("$!{escapetool.xml($doc.space)}" 'tmSpace' 'folder-open')
  #set ($hasPreviousMenuSection = false)
  #if ($hasWatch)
    #set ($watchClasses = '')
    #set ($unwatchClasses = 'hidden')
    #if ($xwiki.watchlist.isSpaceWatched())
      #set ($watchClasses = 'hidden')
      #set ($unwatchClasses = '')
    #end
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=addspace')&amp;xredirect=$escapetool.url($doc.getURL())" $msg.get('core.menu.watchlist.add.space', [$escapetool.xml($doc.space)]) 'tmWatchSpace' 'eye-open' $watchClasses)
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=removespace')&amp;xredirect=$escapetool.url($doc.getURL())" $msg.get('core.menu.watchlist.remove.space') 'tmUnwatchSpace' 'eye-close' $unwatchClasses)
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasSpaceAdmin && $isAdminAppInstalled)
    #set ($adminspaceaction = $!xwiki.getURL("${doc.space}.WebPreferences", 'admin'))
    #submenuitem($adminspaceaction $msg.get('core.menu.admin.space', [$escapetool.xml($doc.space)]) 'tmAdminSpace' 'wrench')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($xwiki.exists('Main.SpaceIndex'))
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #set ($spaceIndexUrl = $xwiki.getURL('Main.SpaceIndex', 'view',"space=${escapetool.url($doc.space)}"))
    #submenuitem($spaceIndexUrl $msg.get('core.menu.space.documentindex') 'tmSpaceDocumentIndex' 'book')
    #set ($hasPreviousMenuSection = true)
  #end
  #if ($hasSpaceAdmin)
    #if ($hasPreviousMenuSection)
      #submenuseparator()
    #end
    #set ($spaceDeleteUrl = $!xwiki.getURL($services.model.resolveDocument('', 'default', $doc.documentReference.extractReference('SPACE')), 'deletespace'))
    #submenuitem($spaceDeleteUrl $msg.get('core.menu.space.delete') 'tmSpaceDelete' 'remove')
    #set ($hasPreviousMenuSection = true)
  #end
  #xwikitopmenuentryend()
#end
##
## Page
##
#set ($canView = !$doc.isNew() && $xwiki.checkAccess($doc.fullName, 'view'))
#set ($canCopy = $canView && $hasCreatePage)
#set ($canDelete = !$doc.isNew() && $xwiki.checkAccess($doc.fullName, 'delete'))
#set ($canShare = $canView && $xwiki.exists('XWiki.SharePage') && !$isGuest)
#set ($canWatch = !$doc.isNew() && $hasWatch)
#set ($displayPageSubmenu = $canWatch || $canShare || $canCopy || $canDelete)
#if (!$displayPageSubmenu)
  #xwikitopmenuentry($xwiki.getURL("${doc.name}", 'view') "$!{escapetool.xml($doc.name)}" 'tmPage' 'file')
#else
  #xwikitopmenuentrystart("$!{escapetool.xml($doc.name)}" 'tmPage' 'file')
  #if ($canWatch)
    #set ($watchClasses = 'hasIcon')
    #set ($unwatchClasses = 'hasIcon hidden')
    #if ($xwiki.watchlist.isDocumentWatched())
      #set ($watchClasses = 'hasIcon hidden')
      #set ($unwatchClasses = 'hasIcon')
    #end
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=adddocument')&amp;xredirect=$escapetool.url($doc.getURL())" $msg.get('core.menu.watchlist.add.page') 'tmWatchDocument' 'eye-open' $watchClasses)
    #submenuitem("$doc.getURL('view', 'xpage=watch&amp;do=removedocument')&amp;xredirect=$escapetool.url($doc.getURL())" $msg.get('core.menu.watchlist.remove.page') 'tmUnwatchDocument' 'eye-close' $unwatchClasses)
  #end
  #if ($canShare)
    #submenuitem($doc.getURL('view', 'viewer=share') $msg.get('core.menu.share') 'tmActionShare' 'envelope')
    #userPicker_import()
    $xwiki.jsx.use('XWiki.SharePage')
    $xwiki.ssx.use('XWiki.SharePage')
  #end
  #if (($canWatch || $canShare) && ($canCopy || $canDelete))
    #submenuseparator()
  #end
  #if ($canCopy)
    #submenuitem($doc.getURL('view', 'xpage=copy') $msg.get('core.menu.copy') 'tmActionCopy' 'share')
  #end
  #if ($canDelete)
    #submenuitem($doc.getURL('view', 'xpage=rename&amp;step=1') $msg.get('core.menu.rename') 'tmActionRename' 'edit')
    #submenuitem($doc.getURL('delete', $!languageparams) $msg.get('core.menu.delete') 'tmActionDelete' 'remove')
  #end
  #xwikitopmenuentryend()
  #if ($canDelete && $keyboardShortcutsEnabled)
    <script type="text/javascript">
      //<![CDATA[
      shortcut.add("$msg.get('core.shortcuts.view.delete')",function() { location.href=$('tmActionDelete').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      shortcut.add("$msg.get('core.shortcuts.view.rename')",function() { location.href=$('tmActionRename').href; }, { 'type':'keypress', 'propagate':false, 'disable_in_input':true });
      //]]>
    </script>
  #end
#end
#xwikitopmenuseparator()
         <li>
           <form class="form-search navbar-search" action="#if($xwiki.exists('Main.Search'))$xwiki.getURL('Main.Search')#else$xwiki.getURL('Main.WebSearch')#end">
             <div class="input-append">
               <input id="headerglobalsearchinput" type="text" name="text" class="input-large search-query" placeholder="$msg.get('panels.search.inputText')">
               <button type="submit" class="btn btn-inverse" value="$msg.get('panels.search.submit')" alt="$msg.get('panels.search.submit')">
                <i class="icon-search icon-white"></i>
                <label style="display:none" for="headerglobalsearchinput">$msg.get('panels.search.inputLabel')</label>
               </button>
             </div>
           </form>
         </li>
       </ul>
       <ul class="nav pull-right">
#xwikitopmenuseparator()
##
## User
##
#if (!$isGuest)
#if ($isSuperAdmin)
  #xwikitopmenuentrystart($!msg.get('superadmin') 'tmUser' 'user')
#else
  #xwikitopmenuentrystart("$!xwiki.getUserName($xcontext.user, false)" 'tmUser' 'user')
  #submenuitem($xwiki.getURL($xcontext.user, 'view') $msg.get('core.menu.profile') 'tmProfile' 'user')
  #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=preferences') $msg.get('core.menu.userPreferences') 'tmUserPreferences' 'wrench')
  #if ($hasWatch)
    #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=watchlist') $msg.get('core.menu.watchlist.management') 'tmWatchlistManager' 'rss')
    #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=network') $msg.get('core.menu.network') 'tmUserNetwork' 'group')
  #end
  #if ($isWorkspaceManagerAppInstalled && $isMainWikiUser)
    #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=workspaces') $msg.get('workspacemanager.menu.user.workspaces') 'tmUserWorkspaces' '')
  #end
  #submenuitem($xwiki.getURL($xcontext.user, 'view', 'category=dashboard') $msg.get('core.menu.userDashboard') 'tmUserDashboard' 'home')
  #submenuseparator()
#end
  #set ($logouturl = $xwiki.getURL('XWiki.XWikiLogout', 'logout', "xredirect=$escapetool.url($xwiki.relativeRequestURL)"))
  #submenuitem($!logouturl $!msg.get('logout') 'tmLogout' 'off')
  #xwikitopmenuentryend()
#end
##
##
#if (!$xcontext.action.startsWith('login'))
  #if ($isGuest)
    #set ($loginurl = $xwiki.getURL('XWiki.XWikiLogin', 'login', "xredirect=$escapetool.url($xwiki.relativeRequestURL)"))
    #xwikitopmenuentry($!loginurl $!msg.get('login') 'tmLogin' 'off')
  #end
#end
#if ($isGuest && $xwiki.hasAccessLevel('register', 'XWiki.XWikiPreferences'))
  #set ($regurl = $xwiki.getURL('XWiki.Register', 'register'))
  #xwikitopmenuentry($!regurl $!msg.get('core.register') 'tmRegister')
#end
#if($xwiki.isMultiLingual())
  #set($currentLanguage = "$!{tdoc.realLanguage}")
  #set($originalLanguage = "$!{doc.realLanguage}")
  #if($currentLanguage != '')
   #set ($availtrans = $doc.translationList)
   #set ($discard = $availtrans.add($originalLanguage))
   #set ($wikiSettingsLanguages = $!xwiki.getXWikiPreference('languages').trim().split('\s*[,| ]\s*'))
   #set ($hasLanguagesSet = $wikiSettingsLanguages.size() > 1 || "$!wikiSettingsLanguages.get(0)" != '')
   #set ($additionallangs = [])
   #foreach($lang in $availtrans)
    #if((!$hasLanguagesSet || $wikiSettingsLanguages.contains($lang)) && $currentLanguage != $lang)
     #set ($discard = $additionallangs.add($lang))
    #end
   #end
   #if($additionallangs.size() > 0)
    #xwikitopmenuentrystart("#languageIcon($currentLanguage)" 'tmCurrentLang')
    #foreach($lang in $additionallangs)
     #submenuitem($!doc.getURL("view", "language=$lang") "#languageIcon($lang) $msg.get($lang)" 'tm$langLang')
    #end
    #xwikitopmenuentryend()
   #else
    #xwikitopmenuentry($!doc.getURL("view", "language=$currentLanguage") "#languageIcon($currentLanguage)" 'tmCurrentLang')
   #end
  #end
#end
        </ul>
      </div>
    </div>
  </div>
</div>
</div>
#end
#end
